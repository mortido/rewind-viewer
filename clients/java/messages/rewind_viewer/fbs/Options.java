// automatically generated by the FlatBuffers compiler, do not modify

package rewind_viewer.fbs;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Options extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static Options getRootAsOptions(ByteBuffer _bb) { return getRootAsOptions(_bb, new Options()); }
  public static Options getRootAsOptions(ByteBuffer _bb, Options obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Options __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public rewind_viewer.fbs.Map map() { return map(new rewind_viewer.fbs.Map()); }
  public rewind_viewer.fbs.Map map(rewind_viewer.fbs.Map obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public rewind_viewer.fbs.Layer layer() { return layer(new rewind_viewer.fbs.Layer()); }
  public rewind_viewer.fbs.Layer layer(rewind_viewer.fbs.Layer obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createOptions(FlatBufferBuilder builder,
      int mapOffset,
      int layerOffset) {
    builder.startTable(2);
    Options.addLayer(builder, layerOffset);
    Options.addMap(builder, mapOffset);
    return Options.endOptions(builder);
  }

  public static void startOptions(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addMap(FlatBufferBuilder builder, int mapOffset) { builder.addOffset(0, mapOffset, 0); }
  public static void addLayer(FlatBufferBuilder builder, int layerOffset) { builder.addOffset(1, layerOffset, 0); }
  public static int endOptions(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Options get(int j) { return get(new Options(), j); }
    public Options get(Options obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public OptionsT unpack() {
    OptionsT _o = new OptionsT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(OptionsT _o) {
    if (map() != null) _o.setMap(map().unpack());
    else _o.setMap(null);
    if (layer() != null) _o.setLayer(layer().unpack());
    else _o.setLayer(null);
  }
  public static int pack(FlatBufferBuilder builder, OptionsT _o) {
    if (_o == null) return 0;
    int _map = _o.getMap() == null ? 0 : rewind_viewer.fbs.Map.pack(builder, _o.getMap());
    int _layer = _o.getLayer() == null ? 0 : rewind_viewer.fbs.Layer.pack(builder, _o.getLayer());
    return createOptions(
      builder,
      _map,
      _layer);
  }
}

