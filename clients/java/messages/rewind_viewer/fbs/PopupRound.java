// automatically generated by the FlatBuffers compiler, do not modify

package rewind_viewer.fbs;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class PopupRound extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static PopupRound getRootAsPopupRound(ByteBuffer _bb) { return getRootAsPopupRound(_bb, new PopupRound()); }
  public static PopupRound getRootAsPopupRound(ByteBuffer _bb, PopupRound obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PopupRound __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String text() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer textAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer textInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public rewind_viewer.fbs.Vector2f areaCenter() { return areaCenter(new rewind_viewer.fbs.Vector2f()); }
  public rewind_viewer.fbs.Vector2f areaCenter(rewind_viewer.fbs.Vector2f obj) { int o = __offset(6); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public float areaRadius() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static void startPopupRound(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addText(FlatBufferBuilder builder, int textOffset) { builder.addOffset(0, textOffset, 0); }
  public static void addAreaCenter(FlatBufferBuilder builder, int areaCenterOffset) { builder.addStruct(1, areaCenterOffset, 0); }
  public static void addAreaRadius(FlatBufferBuilder builder, float areaRadius) { builder.addFloat(2, areaRadius, 0.0f); }
  public static int endPopupRound(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 4);  // text
    builder.required(o, 6);  // area_center
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PopupRound get(int j) { return get(new PopupRound(), j); }
    public PopupRound get(PopupRound obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public PopupRoundT unpack() {
    PopupRoundT _o = new PopupRoundT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(PopupRoundT _o) {
    String _oText = text();
    _o.setText(_oText);
    if (areaCenter() != null) areaCenter().unpackTo(_o.getAreaCenter());
    else _o.setAreaCenter(null);
    float _oAreaRadius = areaRadius();
    _o.setAreaRadius(_oAreaRadius);
  }
  public static int pack(FlatBufferBuilder builder, PopupRoundT _o) {
    if (_o == null) return 0;
    int _text = _o.getText() == null ? 0 : builder.createString(_o.getText());
    startPopupRound(builder);
    addText(builder, _text);
    addAreaCenter(builder, rewind_viewer.fbs.Vector2f.pack(builder, _o.getAreaCenter()));
    addAreaRadius(builder, _o.getAreaRadius());
    return endPopupRound(builder);
  }
}

