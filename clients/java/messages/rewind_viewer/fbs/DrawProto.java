// automatically generated by the FlatBuffers compiler, do not modify

package rewind_viewer.fbs;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class DrawProto extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static DrawProto getRootAsDrawProto(ByteBuffer _bb) { return getRootAsDrawProto(_bb, new DrawProto()); }
  public static DrawProto getRootAsDrawProto(ByteBuffer _bb, DrawProto obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public DrawProto __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long id() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public rewind_viewer.fbs.Vector2f position() { return position(new rewind_viewer.fbs.Vector2f()); }
  public rewind_viewer.fbs.Vector2f position(rewind_viewer.fbs.Vector2f obj) { int o = __offset(6); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public float angle() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public long color() { int o = __offset(10); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public float scale() { int o = __offset(12); return o != 0 ? bb.getFloat(o + bb_pos) : 1.0f; }

  public static void startDrawProto(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addId(FlatBufferBuilder builder, long id) { builder.addLong(0, id, 0L); }
  public static void addPosition(FlatBufferBuilder builder, int positionOffset) { builder.addStruct(1, positionOffset, 0); }
  public static void addAngle(FlatBufferBuilder builder, float angle) { builder.addFloat(2, angle, 0.0f); }
  public static void addColor(FlatBufferBuilder builder, long color) { builder.addInt(3, (int) color, (int) 0L); }
  public static void addScale(FlatBufferBuilder builder, float scale) { builder.addFloat(4, scale, 1.0f); }
  public static int endDrawProto(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 6);  // position
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public DrawProto get(int j) { return get(new DrawProto(), j); }
    public DrawProto get(DrawProto obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

