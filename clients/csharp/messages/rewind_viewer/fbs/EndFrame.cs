// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace rewind_viewer.fbs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EndFrame : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static EndFrame GetRootAsEndFrame(ByteBuffer _bb) { return GetRootAsEndFrame(_bb, new EndFrame()); }
  public static EndFrame GetRootAsEndFrame(ByteBuffer _bb, EndFrame obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EndFrame __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartEndFrame(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<rewind_viewer.fbs.EndFrame> EndEndFrame(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<rewind_viewer.fbs.EndFrame>(o);
  }
}


static public class EndFrameVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
