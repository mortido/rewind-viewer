// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace rewind_viewer.fbs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Rectangle : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Rectangle GetRootAsRectangle(ByteBuffer _bb) { return GetRootAsRectangle(_bb, new Rectangle()); }
  public static Rectangle GetRootAsRectangle(ByteBuffer _bb, Rectangle obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Rectangle __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public rewind_viewer.fbs.Color? Color { get { int o = __p.__offset(4); return o != 0 ? (rewind_viewer.fbs.Color?)(new rewind_viewer.fbs.Color()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public rewind_viewer.fbs.Vector2f? Position { get { int o = __p.__offset(6); return o != 0 ? (rewind_viewer.fbs.Vector2f?)(new rewind_viewer.fbs.Vector2f()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public rewind_viewer.fbs.Vector2f? Size { get { int o = __p.__offset(8); return o != 0 ? (rewind_viewer.fbs.Vector2f?)(new rewind_viewer.fbs.Vector2f()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartRectangle(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddColor(FlatBufferBuilder builder, Offset<rewind_viewer.fbs.Color> colorOffset) { builder.AddOffset(0, colorOffset.Value, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<rewind_viewer.fbs.Vector2f> positionOffset) { builder.AddStruct(1, positionOffset.Value, 0); }
  public static void AddSize(FlatBufferBuilder builder, Offset<rewind_viewer.fbs.Vector2f> sizeOffset) { builder.AddStruct(2, sizeOffset.Value, 0); }
  public static Offset<rewind_viewer.fbs.Rectangle> EndRectangle(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 6);  // position
    builder.Required(o, 8);  // size
    return new Offset<rewind_viewer.fbs.Rectangle>(o);
  }
}


static public class RectangleVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTable(tablePos, 4 /*Color*/, rewind_viewer.fbs.ColorVerify.Verify, false)
      && verifier.VerifyField(tablePos, 6 /*Position*/, 8 /*rewind_viewer.fbs.Vector2f*/, 4, true)
      && verifier.VerifyField(tablePos, 8 /*Size*/, 8 /*rewind_viewer.fbs.Vector2f*/, 4, true)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
