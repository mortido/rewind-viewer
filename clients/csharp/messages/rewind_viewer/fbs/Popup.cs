// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace rewind_viewer.fbs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Popup : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Popup GetRootAsPopup(ByteBuffer _bb) { return GetRootAsPopup(_bb, new Popup()); }
  public static Popup GetRootAsPopup(ByteBuffer _bb, Popup obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Popup __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Text { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTextBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetTextBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetTextArray() { return __p.__vector_as_array<byte>(4); }
  public rewind_viewer.fbs.Vector2f? AreaPosition { get { int o = __p.__offset(6); return o != 0 ? (rewind_viewer.fbs.Vector2f?)(new rewind_viewer.fbs.Vector2f()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public rewind_viewer.fbs.Vector2f? AreaSize { get { int o = __p.__offset(8); return o != 0 ? (rewind_viewer.fbs.Vector2f?)(new rewind_viewer.fbs.Vector2f()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<rewind_viewer.fbs.Popup> CreatePopup(FlatBufferBuilder builder,
      StringOffset textOffset = default(StringOffset),
      rewind_viewer.fbs.Vector2fT area_position = null,
      rewind_viewer.fbs.Vector2fT area_size = null) {
    builder.StartTable(3);
    Popup.AddAreaSize(builder, rewind_viewer.fbs.Vector2f.Pack(builder, area_size));
    Popup.AddAreaPosition(builder, rewind_viewer.fbs.Vector2f.Pack(builder, area_position));
    Popup.AddText(builder, textOffset);
    return Popup.EndPopup(builder);
  }

  public static void StartPopup(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddText(FlatBufferBuilder builder, StringOffset textOffset) { builder.AddOffset(0, textOffset.Value, 0); }
  public static void AddAreaPosition(FlatBufferBuilder builder, Offset<rewind_viewer.fbs.Vector2f> areaPositionOffset) { builder.AddStruct(1, areaPositionOffset.Value, 0); }
  public static void AddAreaSize(FlatBufferBuilder builder, Offset<rewind_viewer.fbs.Vector2f> areaSizeOffset) { builder.AddStruct(2, areaSizeOffset.Value, 0); }
  public static Offset<rewind_viewer.fbs.Popup> EndPopup(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // text
    builder.Required(o, 6);  // area_position
    builder.Required(o, 8);  // area_size
    return new Offset<rewind_viewer.fbs.Popup>(o);
  }
  public PopupT UnPack() {
    var _o = new PopupT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PopupT _o) {
    _o.Text = this.Text;
    _o.AreaPosition = this.AreaPosition.HasValue ? this.AreaPosition.Value.UnPack() : null;
    _o.AreaSize = this.AreaSize.HasValue ? this.AreaSize.Value.UnPack() : null;
  }
  public static Offset<rewind_viewer.fbs.Popup> Pack(FlatBufferBuilder builder, PopupT _o) {
    if (_o == null) return default(Offset<rewind_viewer.fbs.Popup>);
    var _text = _o.Text == null ? default(StringOffset) : builder.CreateString(_o.Text);
    return CreatePopup(
      builder,
      _text,
      _o.AreaPosition,
      _o.AreaSize);
  }
}

public class PopupT
{
  public string Text { get; set; }
  public rewind_viewer.fbs.Vector2fT AreaPosition { get; set; }
  public rewind_viewer.fbs.Vector2fT AreaSize { get; set; }

  public PopupT() {
    this.Text = null;
    this.AreaPosition = new rewind_viewer.fbs.Vector2fT();
    this.AreaSize = new rewind_viewer.fbs.Vector2fT();
  }
}


static public class PopupVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Text*/, true)
      && verifier.VerifyField(tablePos, 6 /*AreaPosition*/, 8 /*rewind_viewer.fbs.Vector2f*/, 4, true)
      && verifier.VerifyField(tablePos, 8 /*AreaSize*/, 8 /*rewind_viewer.fbs.Vector2f*/, 4, true)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
