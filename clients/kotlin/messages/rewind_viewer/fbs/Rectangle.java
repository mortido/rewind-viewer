// automatically generated by the FlatBuffers compiler, do not modify

package rewind_viewer.fbs;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Rectangle extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static Rectangle getRootAsRectangle(ByteBuffer _bb) { return getRootAsRectangle(_bb, new Rectangle()); }
  public static Rectangle getRootAsRectangle(ByteBuffer _bb, Rectangle obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Rectangle __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public rewind_viewer.fbs.Color color() { return color(new rewind_viewer.fbs.Color()); }
  public rewind_viewer.fbs.Color color(rewind_viewer.fbs.Color obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public rewind_viewer.fbs.Vector2f position() { return position(new rewind_viewer.fbs.Vector2f()); }
  public rewind_viewer.fbs.Vector2f position(rewind_viewer.fbs.Vector2f obj) { int o = __offset(6); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public rewind_viewer.fbs.Vector2f size() { return size(new rewind_viewer.fbs.Vector2f()); }
  public rewind_viewer.fbs.Vector2f size(rewind_viewer.fbs.Vector2f obj) { int o = __offset(8); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }

  public static void startRectangle(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addColor(FlatBufferBuilder builder, int colorOffset) { builder.addOffset(0, colorOffset, 0); }
  public static void addPosition(FlatBufferBuilder builder, int positionOffset) { builder.addStruct(1, positionOffset, 0); }
  public static void addSize(FlatBufferBuilder builder, int sizeOffset) { builder.addStruct(2, sizeOffset, 0); }
  public static int endRectangle(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 6);  // position
    builder.required(o, 8);  // size
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Rectangle get(int j) { return get(new Rectangle(), j); }
    public Rectangle get(Rectangle obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

