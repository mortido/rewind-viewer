// automatically generated by the FlatBuffers compiler, do not modify

package rewind_viewer.fbs;

import com.google.flatbuffers.FlatBufferBuilder;

public class CommandUnion {
  private byte type;
  private Object value;

  public byte getType() { return type; }

  public void setType(byte type) { this.type = type; }

  public Object getValue() { return value; }

  public void setValue(Object value) { this.value = value; }

  public CommandUnion() {
    this.type = Command.NONE;
    this.value = null;
  }

  public rewind_viewer.fbs.CircleT asCircle() { return (rewind_viewer.fbs.CircleT) value; }
  public rewind_viewer.fbs.RectangleT asRectangle() { return (rewind_viewer.fbs.RectangleT) value; }
  public rewind_viewer.fbs.TriangleT asTriangle() { return (rewind_viewer.fbs.TriangleT) value; }
  public rewind_viewer.fbs.PolylineT asPolyline() { return (rewind_viewer.fbs.PolylineT) value; }
  public rewind_viewer.fbs.LogTextT asLogText() { return (rewind_viewer.fbs.LogTextT) value; }
  public rewind_viewer.fbs.PopupT asPopup() { return (rewind_viewer.fbs.PopupT) value; }
  public rewind_viewer.fbs.PopupRoundT asPopupRound() { return (rewind_viewer.fbs.PopupRoundT) value; }
  public rewind_viewer.fbs.OptionsT asOptions() { return (rewind_viewer.fbs.OptionsT) value; }
  public rewind_viewer.fbs.EndFrameT asEndFrame() { return (rewind_viewer.fbs.EndFrameT) value; }

  public static int pack(FlatBufferBuilder builder, CommandUnion _o) {
    switch (_o.type) {
      case Command.Circle: return rewind_viewer.fbs.Circle.pack(builder, _o.asCircle());
      case Command.Rectangle: return rewind_viewer.fbs.Rectangle.pack(builder, _o.asRectangle());
      case Command.Triangle: return rewind_viewer.fbs.Triangle.pack(builder, _o.asTriangle());
      case Command.Polyline: return rewind_viewer.fbs.Polyline.pack(builder, _o.asPolyline());
      case Command.LogText: return rewind_viewer.fbs.LogText.pack(builder, _o.asLogText());
      case Command.Popup: return rewind_viewer.fbs.Popup.pack(builder, _o.asPopup());
      case Command.PopupRound: return rewind_viewer.fbs.PopupRound.pack(builder, _o.asPopupRound());
      case Command.Options: return rewind_viewer.fbs.Options.pack(builder, _o.asOptions());
      case Command.EndFrame: return rewind_viewer.fbs.EndFrame.pack(builder, _o.asEndFrame());
      default: return 0;
    }
  }
}

