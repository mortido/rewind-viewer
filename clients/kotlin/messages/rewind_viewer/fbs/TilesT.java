// automatically generated by the FlatBuffers compiler, do not modify

package rewind_viewer.fbs;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class TilesT {
  private rewind_viewer.fbs.Vector2fT position;
  private rewind_viewer.fbs.Vector2fT cellSize;
  private int rowSize;
  private long[] colors;

  public rewind_viewer.fbs.Vector2fT getPosition() { return position; }

  public void setPosition(rewind_viewer.fbs.Vector2fT position) { this.position = position; }

  public rewind_viewer.fbs.Vector2fT getCellSize() { return cellSize; }

  public void setCellSize(rewind_viewer.fbs.Vector2fT cellSize) { this.cellSize = cellSize; }

  public int getRowSize() { return rowSize; }

  public void setRowSize(int rowSize) { this.rowSize = rowSize; }

  public long[] getColors() { return colors; }

  public void setColors(long[] colors) { this.colors = colors; }


  public TilesT() {
    this.position = new rewind_viewer.fbs.Vector2fT();
    this.cellSize = new rewind_viewer.fbs.Vector2fT();
    this.rowSize = 0;
    this.colors = null;
  }
}

