# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Map(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Map()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMap(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Map
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Map
    def Position(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from rewind_viewer.fbs.Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Map
    def Size(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from rewind_viewer.fbs.Vector2f import Vector2f
            obj = Vector2f()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Map
    def XGrid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # Map
    def YGrid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

def MapStart(builder):
    builder.StartObject(4)

def Start(builder):
    MapStart(builder)

def MapAddPosition(builder, position):
    builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(position), 0)

def AddPosition(builder, position):
    MapAddPosition(builder, position)

def MapAddSize(builder, size):
    builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(size), 0)

def AddSize(builder, size):
    MapAddSize(builder, size)

def MapAddXGrid(builder, xGrid):
    builder.PrependUint16Slot(2, xGrid, 0)

def AddXGrid(builder, xGrid):
    MapAddXGrid(builder, xGrid)

def MapAddYGrid(builder, yGrid):
    builder.PrependUint16Slot(3, yGrid, 0)

def AddYGrid(builder, yGrid):
    MapAddYGrid(builder, yGrid)

def MapEnd(builder):
    return builder.EndObject()

def End(builder):
    return MapEnd(builder)
