// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class BoolInput {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):BoolInput {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBoolInput(bb:flatbuffers.ByteBuffer, obj?:BoolInput):BoolInput {
  return (obj || new BoolInput()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBoolInput(bb:flatbuffers.ByteBuffer, obj?:BoolInput):BoolInput {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BoolInput()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

defaultValue():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startBoolInput(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addDefaultValue(builder:flatbuffers.Builder, defaultValue:boolean) {
  builder.addFieldInt8(0, +defaultValue, +false);
}

static endBoolInput(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createBoolInput(builder:flatbuffers.Builder, defaultValue:boolean):flatbuffers.Offset {
  BoolInput.startBoolInput(builder);
  BoolInput.addDefaultValue(builder, defaultValue);
  return BoolInput.endBoolInput(builder);
}
}
