include "vector2f.fbs";

namespace rewind_viewer.fbs;

table Color {
  value:uint32;
  fill:bool = false;
}

table Circle {
  color:Color;
  center:Vector2f (required);
  radius:float;
}

table Arc {
  color:Color;
  center:Vector2f (required);
  radius:float;
  start_angle:float;
  end_angle:float;
}

table CircleSegment {
  color:Color;
  center:Vector2f (required);
  radius:float;
  start_angle:float;
  end_angle:float;
}

table Tiles {
  position:Vector2f (required);
  cell_size:Vector2f (required);
  row_size:uint16;
  colors:[uint32] (required);
}

table Rectangle {
  color:Color;
  position:Vector2f (required);
  size:Vector2f (required);
}

table Triangle {
  color:Color;
  points:[Vector2f] (required);
}

table Polyline {
  color:Color;
  points:[Vector2f] (required);
}

table LogText {
  text:string (required);
}

table Popup {
  text:string (required);
  area_position:Vector2f (required);
  area_size:Vector2f (required);
}

table PopupRound {
  text:string (required);
  area_center:Vector2f (required);
  area_radius:float;
}

table CameraView {
  name:string (required);
  position:Vector2f (required);
  view_radius:float;
}

table Layer {
  id:uint;
  use_permanent_frame:bool=false;
}

table Map {
  position:Vector2f (required);
  size:Vector2f (required);
  x_grid:uint16;
  y_grid:uint16;
}

table Options {
  map:Map;
  layer:Layer;
}

table Subscribe {
  name:string;
  key:byte;
  continuous:bool = false;
  capture_mouse:bool = false;
  min_position_change:float = 0.001;
}

table Unsubscribe {
  key:byte;
}

table ReadEvents {
}

table EndFrame {
}

// Internal messages

table ColorPoint {
  color:uint32;
  position:Vector2f (required);
}

table PrimitiveStorage {
  color_vertexes:[ColorPoint];
  color_circles:[CircleSegment];
  vertexes:[Vector2f];
  circles:[CircleSegment];
}

table PrimitiveIndices {
  stencil_circles:[uint32];
  stencil_segments:[uint32];
  stencil_triangles:[uint32];
  filled_circles:[uint32];
  filled_segments:[uint32];
  thin_circles:[uint32];
  triangles:[uint32];
  lines:[uint32];
}

table Primitives {
  storage:PrimitiveStorage (required);
  indices:[PrimitiveIndices] (required);
}

union Command {
  Arc,
  CameraView,
  Circle,
  CircleSegment,
  LogText,
  Options,
  Polyline,
  Popup,
  PopupRound,
  ReadEvents,
  Rectangle,
  Subscribe,
  Tiles,
  Triangle,
  Unsubscribe,
  Primitives,
  EndFrame,
}

table RewindMessage {
  command:Command (required);
}

root_type RewindMessage;
